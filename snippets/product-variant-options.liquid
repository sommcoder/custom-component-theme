{% comment %}
  Renders product variant options

  Accepts:
  - product: {Object} product object.
  - option: {Object} current product_option object.
  - block: {Object} block object.


  Usage:
  {% render 'product-variant-options',
    product: product,
    option: option,
    block: block
  %}
{% endcomment %}
{%- liquid
  assign variants_available_arr = product.variants | map: 'available'
  assign variants_option1_arr = product.variants | map: 'option1'
  assign variants_option2_arr = product.variants | map: 'option2'
  assign variants_option3_arr = product.variants | map: 'option3'

  assign product_form_id = 'product-form-' | append: section.id
-%}

<script defer>
document.addEventListener('DOMContentLoaded', function () {
  // Find the product form
  const productForm = document.querySelector('form[action="/cart/add"]');
console.log('productForm:', productForm);
  if (productForm) {
    // Handle dropdowns (select elements)
    const variantSelects = productForm.querySelectorAll('select[name="id"]');
    variantSelects.forEach(select => {
      // Reset to no selection
      select.selectedIndex = -1;
      select.value = ''
    });

    // Handle radio buttons
    const variantRadios = productForm.querySelectorAll('input[name="id"][type="radio"]');
    console.log('variantRadios', variantRadios);
    variantRadios.forEach(radio => {
      // Uncheck all radios
      radio.checked = false;
    });

    // Optional: Disable the Add to Cart button until a variant is selected
    const addToCartButton = productForm.querySelector('button[type="submit"]');
    if (addToCartButton) {
      addToCartButton.disabled = true;

      // Enable button when a valid selection is made
      productForm.addEventListener('change', function () {
        const selectedVariant = productForm.querySelector('select[name="id"]:not([selectedIndex="-1"])') ||
                                productForm.querySelector('input[name="id"][type="radio"]:checked');
        addToCartButton.disabled = !selectedVariant;
      });
    }
  }
});


  
</script>

{%- for value in option.values -%}
  {%- liquid
    assign option_disabled = true

    for option1_name in variants_option1_arr
      case option.position
        when 1
          if variants_option1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
        when 2
          if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
        when 3
          if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == product.selected_or_first_available_variant.option2 and variants_option3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
            assign option_disabled = false
          endif
      endcase
    endfor
  -%}


  {%  case block.settings.picker_type %}
    {% when 'button' %}
      <input
      type="radio"
      id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
      name="{{ option.name }}"
      value="{{ value | escape }}"
      form="{{ product_form_id }}"
      {% if option.selected_value == value %}
        checked
      {% endif %}
      {% if option_disabled %}
        class="disabled"
      {% endif %}
    >
    <label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">
      {{ value -}}
      <span class="visually-hidden">{{ 'products.product.variant_sold_out_or_unavailable' | t }}</span>
    </label>
     {% when 'dropdown' %}
      <option
      value="{{ value | escape }}"
      {% if option.selected_value == value %}
        selected="selected"
      {% endif %}
    >
      {% if option_disabled -%}
        {{- 'products.product.value_unavailable' | t: option_value: value -}}
      {%- else -%}
        {{- value -}}
      {%- endif %}
    </option>

    {% comment %}
      * new custom variant bundle option for 'variant picker' block in 'product information' specialized section
    {% endcomment %}
     {% when 'variant bundle' %}
      <input
      type="number"
      id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
      name="{{ option.name }}"
      value="{{ value | escape }}"
      form="{{ product_form_id }}"
      {% if option.selected_value == value %}
        checked
      {% endif %}
      {% if option_disabled %}
        class="disabled"
      {% endif %}
    />
    <label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">
      {{ value -}}
      <span class="visually-hidden">{{ 'products.product.variant_sold_out_or_unavailable' | t }}</span>
    </label>
    {%  endcase %}
{%- endfor -%}
